from collections import deque

goal = '123456780'
moves = {0:[1,3],1:[0,2,4],2:[1,5],3:[0,4,6],4:[1,3,5,7],5:[2,4,8],6:[3,7],7:[4,6,8],8:[5,7]}

def bfs(start):
    visited = set()
    queue = deque([(start, "")])
    while queue:
        state, path = queue.popleft()
        if state == goal:
            return path
        visited.add(state)
        idx = state.index('0')
        for move in moves[idx]:
            lst = list(state)
            lst[idx], lst[move] = lst[move], lst[idx]
            new_state = ''.join(lst)
            if new_state not in visited:
                queue.append((new_state, path + f"{idx}->{move} "))
    return "No solution"

# Example
start_state = '123456708'
print("Moves:", bfs(start_state))
